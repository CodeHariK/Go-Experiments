basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handlers.ResponseHTTP:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  models.Book:
    properties:
      author:
        example: Dino
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      publisher:
        example: Creative Company
        type: string
      title:
        example: Book A
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /v1/books:
    get:
      consumes:
      - application/json
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Book'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Register book
      parameters:
      - description: Register book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.Book'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
      summary: Register a new book
      tags:
      - books
  /v1/books/{id}:
    delete:
      consumes:
      - application/json
      description: Remove book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
      summary: Remove book by ID
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Book'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlers.ResponseHTTP'
      summary: Get book by ID
      tags:
      - books
swagger: "2.0"
